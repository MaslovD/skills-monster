debug=false
server.port=8088
# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/skillsmonster
spring.datasource.username=postgres
spring.datasource.password=1234

# ===============================
# = JPA / HIBERNATE
# ===============================
# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.database-platform=org.hibernate.dialect.CustomPostgreSqlDialect
#spring.jpa.hibernate.dialect=dialect=org.hibernate.dialect.CustomPostgreSqlDialect
#spring.jpa.properties.hibernate.dialect=com.vojtechruzicka.CustomPostgreSqlDialect
spring.jpa.database-platform=com.masdmtr.skillsmonster.json.CustomPostgreSqlDialect
spring.jpa.hibernate.dialect=com.masdmtr.skillsmonster.json.CustomPostgreSqlDialect
#spring.jpa.properties.hibernate.dialect=com.masdmtr.skillsmonster.json.CustomPostgreSqlDialect

# Ddl auto must be set to "create" to ensure that Hibernate will run the
# import.sql file at application startup
#spring.jpa.hibernate.ddl-auto=create

# Show or not log for each sql query
#spring.jpa.show-sql=true

#spring.jpa.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

# Naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

#spring.jpa.generate-ddl=true
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.jpa.hibernate.connection.charSet=UTF-8
#spring.jpa.hbm2ddl.import_files_sql_extractor=org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor

#spring.jpa.format-sql=true
#spring.jpa.use-sql-comments=true
#spring.jpa.hibernate.enable_lazy_load_no_trans=true

# ===============================
# = HIBERNATE SEARCH
# ===============================
# Spring Data JPA will take any properties under spring.jpa.properties.* and
# pass them along (with the prefix stripped) once the EntityManagerFactory is
# created.
# Specify the DirectoryProvider to use (the Lucene Directory)
#spring.jpa.hibernate.search.default.directory_provider = filesystem
# Using the filesystem DirectoryProvider you also have to specify the default
# base directory for all indexes (make sure that the application have write
# permissions on such directory)
#spring.jpa.hibernate.search.default.indexBase = /var/netgloo_blog/lucene/indexes/